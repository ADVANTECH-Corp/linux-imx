// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
/*
 * Copyright (C) 2020 Basler AG
 * Copyright 2020 NXP
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

/dts-v1/;

#include "imx8mp-rsb3720-a1.dts"

&ov5640_0 {
	status = "disabled";
};

&ov5640_1 {
	status = "disabled";
};

&i2c2 {
	basler_camera@36 {
		compatible = "basler,basler-camera-vvcam", "basler-camera-vvcam";
		reg = <0x36>;
		csi_id = <0x00>;
		status = "okay";

		port {
			endpoint {
				data-lanes = <1 2 3 4>;
				clock-lanes = <0>;
				link-frequencies = /bits/ 64 <248000000>;
			};
		};
	};
};

&i2c3 {
	basler_camera@36 {
		compatible = "basler,basler-camera-vvcam", "basler-camera-vvcam";
		reg = <0x36>;
		csi_id = <0x01>;
		status = "disabled";

		port {
			endpoint {
				data-lanes = <1 2 3 4>;
				clock-lanes = <0>;
				link-frequencies = /bits/ 64 <248000000>;
			};
		};
	};
};

&cameradev {
        status = "okay";
};

&isi_0 {
        status = "disabled";
};

&isi_1 {
        status = "disabled";
};

&isp_0 {
        status = "okay";
};

&isp_1 {
        status = "disabled";
};

&mipi_csi_0 {
		status = "okay";
		
        clocks = <&clk IMX8MP_CLK_MEDIA_CAM1_PIX>,
                         <&clk IMX8MP_CLK_MEDIA_AXI>,
                         <&clk IMX8MP_CLK_MEDIA_APB>;
        clock-names = "mipi_clk", "axi_root", "apb_root";
        assigned-clocks = <&clk IMX8MP_CLK_MEDIA_CAM1_PIX>,
                          <&clk IMX8MP_CLK_MEDIA_AXI>,
                          <&clk IMX8MP_CLK_MEDIA_APB>;
        assigned-clock-parents = <&clk IMX8MP_SYS_PLL2_1000M>,
                                 <&clk IMX8MP_SYS_PLL2_500M>,
                                 <&clk IMX8MP_SYS_PLL1_800M>;
        assigned-clock-rates = <500000000>, <500000000>, <200000000>;
};

&mipi_csi_1 {
		status = "disabled";
		
        clocks = <&clk IMX8MP_CLK_MEDIA_CAM2_PIX>,
                         <&clk IMX8MP_CLK_MEDIA_AXI>,
                         <&clk IMX8MP_CLK_MEDIA_APB>;
        clock-names = "mipi_clk", "axi_root", "apb_root";
        assigned-clocks = <&clk IMX8MP_CLK_MEDIA_CAM2_PIX>,
                          <&clk IMX8MP_CLK_MEDIA_AXI>,
                          <&clk IMX8MP_CLK_MEDIA_APB>;
        assigned-clock-parents = <&clk IMX8MP_SYS_PLL2_1000M>,
                                 <&clk IMX8MP_SYS_PLL2_500M>,
                                 <&clk IMX8MP_SYS_PLL1_800M>;
        assigned-clock-rates = <500000000>, <500000000>, <200000000>;
};

&ldb {
	status = "disabled";
};

&ldb_phy {
	status = "disabled";
};

&lvds_backlight0 {
	status = "disabled";
};

&i2c1 {
	adv_bridge: adv7535@3d {
		compatible = "adi,adv7533";
		reg = <0x3d>;
		adi,addr-cec = <0x3b>;
		adi,dsi-lanes = <4>;
		dsi-vcc-enable-gpio = <&gpio1 13 GPIO_ACTIVE_HIGH>;	/* LCD_VDD_EN */
		bklt-vcc-enable-gpio = <&gpio1 1 GPIO_ACTIVE_LOW>;	/* VDD_BKLT1_EN */
		status = "okay";

		port {
			adv7535_from_dsim: endpoint {
				remote-endpoint = <&dsim_to_adv7535>;
			};
		};
	};
};

&mipi_dsi {
	port@1 {
		dsim_to_adv7535: endpoint {
			remote-endpoint = <&adv7535_from_dsim>;
			attach-bridge;
		};
	};
};
